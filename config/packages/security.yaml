security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt
    providers:
        in_memory: { memory: ~ }
        pompyo_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email
    role_hierarchy:
        ROLE_PRIVE: ROLE_USER
        ROLE_ADMIN: [ROLE_PRIVE, ROLE_USER, ROLE_ADMIN_UTILISATEUR_LIST, ROLE_ADMIN_UTILISATEUR_VIEW, ROLE_ADMIN_EVENEMENT_ALL, ROLE_ADMIN_ARTICLE_ALL]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_PRIVE, ROLE_USER, ROLE_ADMIN_UTILISATEUR_ALL, ROLE_ADMIN_EVENEMENT_ALL, ROLE_ADMIN_ARTICLE_ALL]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            form_login:
                login_path: /connexion/
                check_path: /connexion/
            provider: pompyo_provider
            logout:
                path:   /deconnexion/
                target: /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/connexion/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/articles/nouveau/, role: ROLE_ADMIN }
        - { path: ^/articles/supprimer/, role: ROLE_ADMIN }
        - { path: ^/articles/modifier/, role: ROLE_ADMIN }
        - { path: ^/admin/, role: ROLE_ADMIN }
